version: '3.8'

services:
  hotel-db:
    image: 'mysql:8.0.33'
    container_name: hotel-db
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      TZ: America/Cuiaba
      MYSQL_DATABASE: hotel_db
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3306
    stdin_open: true
    tty: true
    expose:
      - 3311
    restart: on-failure
    ports:
      - '3311:3306'
    volumes:
      - ./scripts/hotel-seed-script.sql:/docker-entrypoint-initdb.d/init.sql
      - D:/opt/hotel-booking-system/hotel-db/mysql:/var/lib/mysql
    networks:
      - hotel-booking-system-network

  booking-db:
    image: mysql:8.0.33
    container_name: booking-db
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      TZ: America/Cuiaba
      MYSQL_DATABASE: booking_db
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3306
    stdin_open: true
    tty: true
    expose:
      - 3312
    restart: on-failure
    ports:
      - '3312:3306'
    volumes:
      - ./scripts/booking-seed-script.sql:/docker-entrypoint-initdb.d/init.sql
      - D:/opt/hotel-booking-system/booking-db/mysql:/var/lib/mysql
    networks:
      - hotel-booking-system-network

  customer-db:
    image: mysql:8.0.33
    container_name: customer-db
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      TZ: America/Cuiaba
      MYSQL_DATABASE: customer_db
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_ROOT_HOST: '%'
      MYSQL_TCP_PORT: 3306
    stdin_open: true
    tty: true
    expose:
      - 3313
    restart: on-failure
    ports:
      - '3313:3306'
    volumes:
      - ./scripts/customer-seed-script.sql:/docker-entrypoint-initdb.d/init.sql
      - D:/opt/hotel-booking-system/customer-db/mysql:/var/lib/mysql
    networks:
      - hotel-booking-system-network

  hotel-booking-system-queue:
    image: rabbitmq:3-management
    container_name: hotel-booking-system-queue
    hostname: hotel-booking-system-queue
    restart: on-failure
    ports:
      - '5672:5672'
      - '25676:25676'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: root
    networks:
      - hotel-booking-system-network

networks:
  hotel-booking-system-network:
    driver: bridge
    name: hotel-booking-system-network
