version: '3.8'

services:
  hotel-service:
    image: com.hotel.booking.system/hotel-service:latest
    container_name: hotel-service
    restart: on-failure
    build:
      context: ../
      dockerfile: ./docker/dockerfile/hotel.dockerfile
    environment:
      HOTEL_SERVER_PORT: 8001
      HOTEL_DB_HOST: hotel-db
      HOTEL_DB_PORT: 3306
      HOTEL_DB_NAME: hotel_db
      HOTEL_DB_USERNAME: user
      HOTEL_DB_PASSWORD: password
      ENABLE_BUILTIN_DOCKER_COMPOSE: false
      RABBITMQ_HOST: hotel-booking-system-queue
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root
    ports:
      - '8001:8001'
    networks:
      - hotel-booking-system-network

  booking-service:
    image: com.hotel.booking.system/booking-service:latest
    container_name: booking-service
    restart: on-failure
    build:
      context: ../
      dockerfile: ./docker/dockerfile/booking.dockerfile
    environment:
      BOOKING_SERVER_PORT: 8002
      BOOKING_DB_HOST: booking-db
      BOOKING_DB_PORT: 3306
      BOOKING_DB_NAME: booking_db
      BOOKING_DB_USERNAME: user
      BOOKING_DB_PASSWORD: password
      ENABLE_BUILTIN_DOCKER_COMPOSE: false
      RABBITMQ_HOST: hotel-booking-system-queue
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root
    ports:
      - '8002:8002'
    networks:
      - hotel-booking-system-network

  payment-service:
    image: com.hotel.booking.system/payment-service:latest
    container_name: payment-service
    restart: on-failure
    build:
      context: ../
      dockerfile: ./docker/dockerfile/payment.dockerfile
    environment:
      PAYMENT_SERVER_PORT: 8003
      ENABLE_BUILTIN_DOCKER_COMPOSE: false
      RABBITMQ_HOST: hotel-booking-system-queue
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root
      FAILURE_CHANCE_PERCENTAGE: 50
    ports:
      - '8003:8003'
    networks:
      - hotel-booking-system-network

  customer-service:
    image: com.hotel.booking.system/customer-service:latest
    container_name: customer-service
    restart: on-failure
    build:
      context: ../
      dockerfile: ./docker/dockerfile/customer.dockerfile
    environment:
      CUSTOMER_SERVER_PORT: 8004
      CUSTOMER_DB_HOST: customer-db
      CUSTOMER_DB_PORT: 3306
      CUSTOMER_DB_NAME: customer_db
      CUSTOMER_DB_USERNAME: user
      CUSTOMER_DB_PASSWORD: password
      ENABLE_BUILTIN_DOCKER_COMPOSE: false
      RABBITMQ_HOST: hotel-booking-system-queue
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: root
      RABBITMQ_PASSWORD: root
    ports:
      - '8004:8004'
    networks:
      - hotel-booking-system-network
networks:
  hotel-booking-system-network:
    driver: bridge
    name: hotel-booking-system-network
